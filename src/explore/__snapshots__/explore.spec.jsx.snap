// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Explore /> should render a header title 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <div
        className="tab-header"
        id="explore-block"
    >
        <h1>
            Organization Search
        </h1>
        <p>
            Look for some organizations, get ideas for places to volunteer
        </p>
    </div>
    <div
        className="off-the-wall"
    >
        <SearchBar
            filterText=""
            onFilterTextInput={[Function]}
        />
        <OrgTable
            filterText=""
            orgs={Array []}
        />
    </div>
</div>,
  "nodes": Array [
    <div>
      <div
            className="tab-header"
            id="explore-block"
      >
            <h1>
                  Organization Search
            </h1>
            <p>
                  Look for some organizations, get ideas for places to volunteer
            </p>
      </div>
      <div
            className="off-the-wall"
      >
            <SearchBar
                  filterText=""
                  onFilterTextInput={[Function]}
            />
            <OrgTable
                  filterText=""
                  orgs={Array []}
            />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Explore />,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Explore {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "handleFilterTextInput": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "filterText": "",
          "organizations": Array [],
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <div
                    className="tab-header"
                    id="explore-block"
          >
                    <h1>
                              Organization Search
                    </h1>
                    <p>
                              Look for some organizations, get ideas for places to volunteer
                    </p>
          </div>
          <div
                    className="off-the-wall"
          >
                    <SearchBar
                              filterText=""
                              onFilterTextInput={[Function]}
                    />
                    <OrgTable
                              filterText=""
                              orgs={Array []}
                    />
          </div>
</div>,
        "_debugID": 6,
        "_renderedOutput": <div>
          <div
                    className="tab-header"
                    id="explore-block"
          >
                    <h1>
                              Organization Search
                    </h1>
                    <p>
                              Look for some organizations, get ideas for places to volunteer
                    </p>
          </div>
          <div
                    className="off-the-wall"
          >
                    <SearchBar
                              filterText=""
                              onFilterTextInput={[Function]}
                    />
                    <OrgTable
                              filterText=""
                              orgs={Array []}
                    />
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Explore />,
}
`;
